// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace WC.DataAccess.Models;

public partial class WhichCountryContext : DbContext
{
    public WhichCountryContext(DbContextOptions<WhichCountryContext> options)
        : base(options)
    {
    }

    public virtual DbSet<CountryDetail> CountryDetails { get; set; }

    public virtual DbSet<GeoLocation> GeoLocations { get; set; }

    public virtual DbSet<Plan> Plans { get; set; }

    public virtual DbSet<Token> Tokens { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<UserPlan> UserPlans { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<CountryDetail>(entity =>
        {
            entity.HasKey(e => e.CountryDetailsId).HasName("PK__CountryD__3214EC271474178B");

            entity.Property(e => e.CountryCode)
                .HasMaxLength(64)
                .IsUnicode(false);
            entity.Property(e => e.CountryName)
                .HasMaxLength(128)
                .IsUnicode(false);
            entity.Property(e => e.CountryRegion)
                .HasMaxLength(128)
                .IsUnicode(false);
            entity.Property(e => e.CountrySubregion)
                .HasMaxLength(128)
                .IsUnicode(false);
            entity.Property(e => e.FileName)
                .HasMaxLength(128)
                .IsUnicode(false);
            entity.Property(e => e.FlagUrl)
                .HasMaxLength(128)
                .IsUnicode(false)
                .HasColumnName("FlagURL");
        });

        modelBuilder.Entity<GeoLocation>(entity =>
        {
            entity.HasKey(e => e.GeoLocationId).HasName("PK__GeoLocat__3214EC272FDF6EB1");

            entity.ToTable("GeoLocation");

            entity.Property(e => e.CountryCode)
                .HasMaxLength(64)
                .IsUnicode(false);
            entity.Property(e => e.EndIp)
                .HasMaxLength(128)
                .IsUnicode(false)
                .HasColumnName("EndIP");
            entity.Property(e => e.EndIpnumber).HasColumnName("EndIPNumber");
            entity.Property(e => e.StartIp)
                .HasMaxLength(128)
                .IsUnicode(false)
                .HasColumnName("StartIP");
            entity.Property(e => e.StartIpnumber).HasColumnName("StartIPNumber");
        });

        modelBuilder.Entity<Plan>(entity =>
        {
            entity.HasKey(e => e.PlanId).HasName("PK__Plans__755C22B7CFEB5C53");

            entity.Property(e => e.PlanId).ValueGeneratedNever();
            entity.Property(e => e.PlanDescription)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PlanName)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Price).HasColumnType("decimal(10, 2)");
        });

        modelBuilder.Entity<Token>(entity =>
        {
            entity.HasKey(e => e.TokenId).HasName("PK__Tokens__3214EC27FD69A2CF");

            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.TokenValue)
                .IsRequired()
                .HasMaxLength(512)
                .IsUnicode(false);
            entity.Property(e => e.ValidUntil).HasColumnType("datetime");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__Users__1788CC4C8AFBF306");

            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(128)
                .IsUnicode(false);
            entity.Property(e => e.FirstName)
                .IsRequired()
                .HasMaxLength(128)
                .IsUnicode(false);
            entity.Property(e => e.LastName)
                .IsRequired()
                .HasMaxLength(128)
                .IsUnicode(false);
            entity.Property(e => e.PasswordHash)
                .IsRequired()
                .HasMaxLength(512)
                .IsUnicode(false);
            entity.Property(e => e.Username)
                .IsRequired()
                .HasMaxLength(128)
                .IsUnicode(false);
        });

        modelBuilder.Entity<UserPlan>(entity =>
        {
            entity.HasKey(e => e.UserPlanId).HasName("PK__UserPlan__B2231FE116F01392");

            entity.Property(e => e.PlanEnd).HasColumnType("datetime");
            entity.Property(e => e.PlanStart).HasColumnType("datetime");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}